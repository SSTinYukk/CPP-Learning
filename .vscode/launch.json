//launch.json
{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        
        // {
        //     "name": "Launch",
        //     "type": "lldb",
        //     "request": "launch",
        //     "program": "${fileDirname}/${fileBasenameNoExtension}.out",
        //     "args": ["-arg1", "-arg2"],
        // }
        {
            "name": "clang++ build and debug active file", // 配置名称，将会在启动配置的下拉菜单中显示 
            "type": "cppdbg", // 配置类型，这里只能为cppdbg
            "request": "launch", // 请求配置类型，可以为launch（启动）或attach（附加）
            "program": "${fileDirname}/${fileBasenameNoExtension}.out", // 将要进行调试的程序的路径，在linux中文件的后缀名不是那么重要，这里可以不添加，但要与tasks.json的输出一致
            "args": [], // 程序调试时传递给程序的命令行参数，一般设为空即可
            "stopAtEntry": false,   // 设为true时程序将暂停在程序入口处
            "cwd": "${workspaceFolder}",  // 调试程序时的工作目录，在当前的工作路径即可，总之还是要与tasks.json的配置一致
            "environment": [],
            "externalConsole": false,    // 调试时是否显示控制台窗口，一般设置为true显示控制台
            "MIMode": "gdb",// 指定连接的调试器，可以为gdb或lldb。
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ],
            "preLaunchTask": "clang++ build active file",   // 调试会话开始前执行的任务，一般为编译程序。与tasks.json的taskName相对应
            "miDebuggerPath": "/usr/bin/gdb" // 调试器路径。
        },
        
    ]
}